---
- name: Update availability of MicWilliStores service
  hosts: localhost
  gather_facts: false
  vars:
    base_url: "https://helixdemoash626-itom-demo.onbmc.com/myit-sb"
    username: "Liam"
    password: "Password_1234"
    target_service_name: "MicWilliStores"

  tasks:
    - name: Authenticate and obtain session token
      ansible.builtin.uri:
        url: "{{ base_url }}/users/login"
        method: POST
        headers:
          Content-Type: "application/json; charset=UTF-8"
          X-Requested-By: "Ansible"
        body_format: json
        body:
          id: "{{ username }}"
          password: "{{ password }}"
        return_content: yes
        status_code: 200
      register: login_response

    - name: Extract session token
      set_fact:
        session_token: "{{ login_response.json.token }}"

    - name: Search for MicWilliStores service
      ansible.builtin.uri:
        url: "{{ base_url }}/serviceavailability/"
        method: GET
        headers:
          X-Requested-By: "Ansible"
          Authorization: "Bearer {{ session_token }}"
        return_content: yes
        status_code: 200
      register: service_list

    - name: Extract service ID for MicWilliStores
      set_fact:
        target_service_id: "{{ (service_list.json.ServiceAvailability | selectattr('name', 'equalto', target_service_name) | list)[0].id }}"
      when: service_list.json.ServiceAvailability is defined

    - name: Show service ID
      ansible.builtin.debug:
        msg: "Found service '{{ target_service_name }}' with ID {{ target_service_id }}"
      when: target_service_id is defined

    - name: Update service availability to 10
      ansible.builtin.uri:
        url: "{{ base_url }}/update"
        method: POST
        headers:
          Content-Type: "application/json; charset=UTF-8"
          X-Requested-By: "Ansible"
          Authorization: "Bearer {{ session_token }}"
        body_format: json
        body:
          ServiceAvailability:
            id: "{{ target_service_id }}"
            changes:
              status: 10
        return_content: yes
        status_code: 200
      when: target_service_id is defined
      register: update_response

    - name: Show update response
      ansible.builtin.debug:
        var: update_response
      when: target_service_id is defined