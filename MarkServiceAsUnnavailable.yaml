---
- name: Update availability of MicWilliStores service
  hosts: localhost
  gather_facts: no
  vars:
    dwp_url: "https://helixdemoash626-demo-dwp.onbmc.com/dwp/rest"
    dwp_user: "Liam"
    dwp_pass: "Password_1234"

  tasks:
    - name: Authenticate to DWP and store cookies
      ansible.builtin.uri:
        url: "{{ dwp_url }}/dwp/rest/users/sessions/login"
        method: POST
        headers:
          X-Requested-By: XMLHttpRequest
          Content-Type: application/json; charset=UTF-8
        body_format: json
        body:
          loginId: "{{ dwp_user }}"
          password: "{{ dwp_pass }}"
          appName: "dwp"
          apiVersion: 19020000
          locale: "en-US"
          deviceToken: "dummyToken"
          os: "Windows 10"
          model: "Web Client"
        return_content: yes
        status_code: 200
      register: login_response

    - name: Search for MicWilliStores service
      ansible.builtin.uri:
        url: "{{ dwp_url }}/dwp/rest/serviceavailability/"
        method: GET
        headers:
          X-Requested-By: XMLHttpRequest
        return_content: yes
        status_code: 200
      register: service_list

    - name: Extract MicWilliStores service ID (if exists)
      ansible.builtin.set_fact:
        target_service_id: >-
          {{ (service_list.json.ServiceAvailability
              | selectattr('name', 'equalto', 'MicWilliStores')
              | list)[0].id | default(None) }}

    - name: Show found service ID
      ansible.builtin.debug:
        msg: >-
          {% if target_service_id %}
            MicWilliStores service ID is {{ target_service_id }}
          {% else %}
            MicWilliStores service not found
          {% endif %}

    - name: Update MicWilliStores service availability to 10 (only if found)
      ansible.builtin.uri:
        url: "{{ dwp_url }}/dwp/rest/update"
        method: POST
        headers:
          X-Requested-By: XMLHttpRequest
          Content-Type: application/json; charset=UTF-8
        body_format: json
        body:
          ServiceAvailability:
            id: "{{ target_service_id }}"
            changes:
              status: 10
        status_code: 200
      when: target_service_id is not none
      register: update_response

    - name: Show update result (if service was updated)
      ansible.builtin.debug:
        var: update_response.json
      when: target_service_id is not none